name: "Setup test server"
author: "Zxilly"
description: "Setup a test server of Notify."

runs:
  using: "composite"
  steps:
    - uses: xSAVIKx/artifact-exists-action@v0
      id: exist
      with:
        name: 'server'

    - uses: actions/download-artifact@v3
      if: steps.exist.outputs.exists == 'true'
      with:
        name: server

    - shell: bash
      if: steps.exist.outputs.exists == 'true' && runner.os != 'Windows'
      run: |
        chmod +x server-linux
        chmod +x server-macos

    - name: Run on Windows
      shell: bash
      if: steps.exist.outputs.exists == 'true' && runner.os == 'Windows'
      run: ./server-windows &
      env:
        TEST: "true"
    
    - name: Run on MacOS
      shell: bash
      if: steps.exist.outputs.exists == 'true' && runner.os == 'macOS'
      run: ./server-macos &
      env:
        TEST: "true"

    - name: Run on Linux
      shell: bash
      if: steps.exist.outputs.exists == 'true' && runner.os == 'Linux'
      run: ./server-linux &
      env:
        TEST: "true"

    - uses: actions/checkout@v3
      if: steps.exist.outputs.exists != 'true'
      working-directory: /tmp/server
      with:
        repository: "ZNotify/server"
    
    - uses: actions/setup-go@v3
      if: steps.exist.outputs.exists != 'true'
      working-directory: /tmp/server
      with:
        go-version: "1.19"
        cache: "true"
    
    - name: Fetch frontend asset
      if: steps.exist.outputs.exists != 'true'
      working-directory: /tmp/server
      shell: bash
      run: |
        wget https://github.com/ZNotify/frontend/releases/download/bundle/build.zip
        unzip build.zip
        rm build.zip
        mv build web/static

    - name: Build
      if: steps.exist.outputs.exists != 'true'
      working-directory: /tmp/server
      shell: bash
      run: go build -o server notify-api
    
    - name: Run
      if: steps.exist.outputs.exists != 'true'
      working-directory: /tmp/server
      shell: bash
      run: ./server &
      env:
        TEST: "true"

branding:
  icon: "airplay"
  color: "green"